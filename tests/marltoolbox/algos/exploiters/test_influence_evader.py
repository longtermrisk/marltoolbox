from evader_utils import *


def test_copy_weights_at_start_of_exploitation():
    for evader, start_exploit_at_step_n, _ in given_an_evader_policy():
        evader = when_reaching_the_start_of_exploitation(
            evader,
            start_exploit_at_step_n)

        assert_weights_of_both_policies_are_equal(evader)


def test_dont_copy_weights_before_start_of_exploitation():
    for evader, start_exploit_at_step_n, _ in given_an_evader_policy():

        for _ in range(10):
            evader = when_before_the_start_of_exploitation(
                evader, start_exploit_at_step_n)

            assert_weights_of_both_policies_are_not_equal(evader)


def test_copy_weights_every_n_env_steps():
    for evader, start_exploit_at_step_n, copy_weights_every_n_steps in \
            given_an_evader_policy():

        for nth_repetition in range(1, 10):
            evader = when_every_n_step_after_start_of_exploitation(
                evader,
                start_exploit_at_step_n,
                copy_weights_every_n_steps,
                nth_repetition)

            assert_weights_of_both_policies_are_equal(evader)


def test_copy_weights_only_every_n_env_steps():
    for evader, start_exploit_at_step_n, copy_weights_every_n_steps in \
            given_an_evader_policy():
        for nth_repetition in range(1, 4):
            for _ in range(3):
                evader = when_in_between_n_step_after_start_of_exploitation(
                    evader,
                    start_exploit_at_step_n,
                    copy_weights_every_n_steps,
                    nth_repetition)

                assert_weights_of_both_policies_are_not_equal(evader)
